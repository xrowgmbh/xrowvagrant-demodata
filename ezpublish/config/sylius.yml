imports:
    - { resource: parameters_sylius.yml }

# config.yml
#framework:
    #translator:      { fallback: %sylius.locale% }
    #secret:          %sylius.secret%
    #router:
    #    resource: "%kernel.root_dir%/config/routing.yml"
    #    strict_requirements: %kernel.debug%
    #form:            true
    #csrf_protection: true
    #validation:      { enable_annotations: true }
    #templating:      { engines: ['twig'] }
    #default_locale:  "%sylius.locale%"
    #trusted_proxies: ~
    #session:         ~

#twig:
    #form:
    #    resources:
    #        - SyliusWebBundle:Common:forms.html.twig
    #        - SyliusResourceBundle::forms.html.twig
    #        - CmfMediaBundle:Form:fields.html.twig
    #debug:            %kernel.debug%
    #strict_variables: %kernel.debug%
    #paths:
    #    %kernel.root_dir%/../vendor/payum/payum/src/Payum/Core/Resources/views: PayumCore
    #    %kernel.root_dir%/../vendor/payum/payum/src/Payum/Stripe/Resources/views: PayumStripe

#assetic:
    #debug:          %kernel.debug%
    #use_controller: false
    #bundles:        ['SyliusWebBundle', 'CmfCreateBundle', 'SyliusResourceBundle']
    #filters:
    #    cssrewrite: ~

doctrine_cache:
    providers:
        sylius_settings: %sylius.cache%
        phpcr_meta: %sylius.cache%
        phpcr_nodes: %sylius.cache%

stof_doctrine_extensions:
    default_locale: %sylius.locale%
    orm:
        default:
            tree: true
            sluggable: true
            timestampable: true
            softdeleteable: true
            loggable: true
            sortable: true

hwi_oauth:
    firewall_name: main
    resource_owners:
        amazon:
            type:          amazon
            client_id:     %sylius.oauth.amazon.clientid%
            client_secret: %sylius.oauth.amazon.clientsecret%
        facebook:
            type:          facebook
            client_id:     %sylius.oauth.facebook.clientid%
            client_secret: %sylius.oauth.facebook.clientsecret%
            scope:         "email"
        google:
            type:          google
            client_id:     %sylius.oauth.google.clientid%
            client_secret: %sylius.oauth.google.clientsecret%
            scope:         "https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile"

doctrine:
    orm:
        auto_generate_proxy_classes: %kernel.debug%
        entity_managers:
            default:
                auto_mapping: true
                mappings:
                    gedmo_loggable:
                        type: annotation
                        prefix: Gedmo\Loggable\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity"
                        is_bundle: false
                filters:
                    softdeleteable:
                        class: Gedmo\SoftDeleteable\Filter\SoftDeleteableFilter
                        enabled: true
                dql:
                    string_functions:
                        MATCH: Sylius\Bundle\SearchBundle\Extension\Doctrine\MatchAgainstFunction

doctrine_phpcr:
    session:
        backend: %sylius.phpcr.backend%
        workspace: %sylius.phpcr.workspace%
        username: %sylius.phpcr.user%
        password: %sylius.phpcr.pass%
    odm:
        auto_mapping: true
        auto_generate_proxy_classes: %kernel.debug%

swiftmailer:
    transport: %sylius.mailer.transport%
    host:      %sylius.mailer.host%
    port:      %sylius.mailer.port%
    username:  %sylius.mailer.user%
    password:  %sylius.mailer.password%
    spool:     { type: memory }


# @SyliusCoreBundle/Resources/config/app/sylius.yml
sylius_core:
    driver: doctrine/orm
    routing:
        %sylius.model.product.class%:
            field: slug
            prefix: /p
            defaults:
                controller: sylius.controller.product:showAction
                repository: sylius.repository.product
                sylius:
                    template: SyliusWebBundle:Frontend/Product:show.html.twig
                    criteria: {slug: $slug}
        %sylius.model.taxon.class%:
            field: permalink
            prefix: /t
            defaults:
                controller: sylius.controller.product:indexByTaxonAction
                repository: sylius.repository.taxon
                sylius:
                    template: SyliusWebBundle:Frontend/Product:indexByTaxon.html.twig

sylius_money:
    currency: %sylius.currency%
    locale: %sylius.locale%

sylius_locale: ~

sylius_currency: ~

sylius_contact: ~

sylius_api:
    classes:
        api_user:
            model: %sylius.model.user.class%

sylius_cart:
    resolver: sylius.cart_item_resolver.default
    classes:
        item:
            form: Sylius\Bundle\CoreBundle\Form\Type\CartItemType
        cart:
            form: Sylius\Bundle\CoreBundle\Form\Type\CartType

sylius_settings: ~

sylius_content:
    driver: doctrine/phpcr-odm
    classes:
        static_content:
            repository: Sylius\Bundle\ContentBundle\Doctrine\ODM\PHPCR\StaticContentRepository

sylius_taxonomy:
    classes:
        taxonomy:
            model: Sylius\Component\Core\Model\Taxonomy
            repository: Sylius\Bundle\ResourceBundle\Doctrine\ORM\TranslatableEntityRepository
            form: Sylius\Bundle\CoreBundle\Form\Type\TaxonomyType
            translatable:
                targetEntity: Sylius\Component\Taxonomy\Model\TaxonomyTranslation
        taxonomy_translation: ~
        taxon:
            model: Sylius\Component\Core\Model\Taxon
            form: Sylius\Bundle\CoreBundle\Form\Type\TaxonType
            translatable:
                targetEntity: Sylius\Component\Taxonomy\Model\TaxonTranslation
        taxon_translation: ~

sylius_product:
    driver: doctrine/orm
    classes:
        product:
            model: Sylius\Component\Core\Model\Product
            controller: Sylius\Bundle\CoreBundle\Controller\ProductController
            repository: Sylius\Bundle\CoreBundle\Doctrine\ORM\ProductRepository
            form:
                default: Sylius\Bundle\CoreBundle\Form\Type\ProductType
            translatable:
                targetEntity: Sylius\Component\Core\Model\ProductTranslation
        product_translation:
            model: Sylius\Component\Core\Model\ProductTranslation


sylius_archetype:
    classes:
        product:
            subject: Sylius\Component\Core\Model\Product
            attribute: Sylius\Component\Product\Model\Attribute
            option: Sylius\Component\Product\Model\Option
            archetype:
                model: Sylius\Component\Product\Model\Archetype
                repository: Sylius\Bundle\ResourceBundle\Doctrine\ORM\TranslatableEntityRepository
                translatable:
                    targetEntity: Sylius\Component\Product\Model\ArchetypeTranslation
            archetype_translation:
                model: Sylius\Component\Product\Model\ArchetypeTranslation

sylius_attribute: ~

sylius_variation:
    classes:
        product:
            variant:
                model: Sylius\Component\Core\Model\ProductVariant
                repository: Sylius\Bundle\CoreBundle\Doctrine\ORM\ProductVariantRepository
                form: Sylius\Bundle\CoreBundle\Form\Type\ProductVariantType

sylius_taxation:
    classes:
        tax_rate:
            model: Sylius\Component\Core\Model\TaxRate
            form: Sylius\Bundle\CoreBundle\Form\Type\TaxRateType

sylius_shipping:
    classes:
        shipment:
            model: Sylius\Component\Core\Model\Shipment
            repository: Sylius\Bundle\CoreBundle\Doctrine\ORM\ShipmentRepository
        shipment_item:
            model: Sylius\Component\Core\Model\InventoryUnit
        shipping_method:
            model: Sylius\Component\Core\Model\ShippingMethod
            repository: Sylius\Bundle\ResourceBundle\Doctrine\ORM\TranslatableEntityRepository
            form: Sylius\Bundle\CoreBundle\Form\Type\ShippingMethodType
            translatable:
                targetEntity: Sylius\Component\Shipping\Model\ShippingMethodTranslation
        shipping_method_translation: ~

sylius_promotion:
    classes:
        promotion_subject:
            model: %sylius.model.order.class%
        promotion_coupon:
            model: Sylius\Component\Core\Model\Coupon
            form: Sylius\Bundle\CoreBundle\Form\Type\CouponType

sylius_inventory:
    backorders: %sylius.inventory.backorders_enabled%
    track_inventory: %sylius.inventory.tracking_enabled%
    classes:
        inventory_unit:
            model: Sylius\Component\Core\Model\InventoryUnit
        stockable:
            model: %sylius.model.product_variant.class%

sylius_payment:
    classes:
        payment:
            model: Sylius\Component\Core\Model\Payment
            controller: Sylius\Bundle\CoreBundle\Controller\PaymentController
    gateways:
        dummy: Test
        stripe: Stripe
        be2bill: Be2Bill
        stripe_checkout: Stripe Checkout
        paypal_express_checkout: Paypal Express Checkout

sylius_payum: ~

sylius_addressing:
    scopes:
        shipping: shipping
        content: content
        price: price
    classes:
        address:
            model: Sylius\Component\Core\Model\Address

sylius_order:
    guest_order: %sylius.order.allow_guest_order%
    classes:
        order:
            model: Sylius\Component\Core\Model\Order
            controller: Sylius\Bundle\CoreBundle\Controller\OrderController
            repository: Sylius\Bundle\CoreBundle\Doctrine\ORM\OrderRepository
            form: Sylius\Bundle\CoreBundle\Form\Type\OrderType
        order_item:
            model: Sylius\Component\Core\Model\OrderItem
            form: Sylius\Bundle\CoreBundle\Form\Type\OrderItemType

sylius_sequence:
    generators:
        %sylius.model.order.class%: sylius.sequence.sequential_number_generator

sylius_pricing:
    forms:
        - sylius_product_variant

sylius_translation:
    default_mapping:
        translatable:
            field: translations
            currentLocale: currentLocale
            fallbackLocale: fallbackLocale
        translation:
            field: translatable
            locale: locale


# @SyliusCoreBundle/Resources/config/app/main.yml
twig:
    exception_controller: 'FOS\RestBundle\Controller\ExceptionController::showAction'

knp_gaufrette:
    adapters:
        sylius_image:
            local:
                directory:  %kernel.root_dir%/../web/media/image
                create:     true
    filesystems:
        sylius_image:
            adapter: %sylius.uploader.filesystem%

liip_imagine:
    loaders:
        default:
            filesystem:
                data_root: %kernel.root_dir%/../web/media/image
    filter_sets:
        sylius_small:
            filters:
                thumbnail: { size: [120, 90], mode: outbound }
        sylius_medium:
            filters:
                thumbnail: { size: [240, 180], mode: outbound }
        sylius_large:
            filters:
                thumbnail: { size: [640, 480], mode: outbound }

knp_snappy:
    pdf:
        enabled:    true
        binary:     /usr/bin/wkhtmltopdf
        options:    []
    image:
        enabled:    true
        binary:     /usr/bin/wkhtmltoimage
        options:    []

sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.block.service.text: ~

fos_user:
    db_driver: orm
    firewall_name: main
    user_class: %sylius.model.user.class%
    group:
        group_class: Sylius\Component\Core\Model\Group
    profile:
        form:
            type: sylius_user_profile
    registration:
        form:
            type: sylius_user_registration

fos_rest:
    disable_csrf_role: ROLE_API
    view:
        formats:
            json: true
            xml:  true
        empty_content: 204
    format_listener:
        rules:
            - { path: '^/api', priorities: ['json', 'xml'], fallback_format: json, prefer_extension: true }
            - { path: '^/', stop: true }

jms_serializer:
    metadata:
        directories:
            FOSUB:
                namespace_prefix: "FOS\\UserBundle"
                path: "%kernel.root_dir%/Resources/FOSUserBundle/serializer"
            sylius-addressing:
                namespace_prefix: "Sylius\\Component\\Addressing"
                path: "@SyliusAddressingBundle/Resources/config/serializer"
            sylius-attribute:
                namespace_prefix: "Sylius\\Component\\Attribute"
                path: "@SyliusAttributeBundle/Resources/config/serializer"
            sylius-contact:
                namespace_prefix: "Sylius\\Component\\Contact"
                path: "@SyliusContactBundle/Resources/config/serializer"
            sylius-core:
                namespace_prefix: "Sylius\\Component\\Core"
                path: "@SyliusCoreBundle/Resources/config/serializer"
            sylius-currency:
                namespace_prefix: "Sylius\\Component\\Currency"
                path: "@SyliusCurrencyBundle/Resources/config/serializer"
            sylius-inventory:
                namespace_prefix: "Sylius\\Component\\Inventory"
                path: "@SyliusInventoryBundle/Resources/config/serializer"
            sylius-locale:
                namespace_prefix: "Sylius\\Component\\Locale"
                path: "@SyliusLocaleBundle/Resources/config/serializer"
            sylius-order:
                namespace_prefix: "Sylius\\Component\\Order"
                path: "@SyliusOrderBundle/Resources/config/serializer"
            sylius-payment:
                namespace_prefix: "Sylius\\Component\\Payment"
                path: "@SyliusPaymentBundle/Resources/config/serializer"
            sylius-product:
                namespace_prefix: "Sylius\\Component\\Product"
                path: "@SyliusProductBundle/Resources/config/serializer"
            sylius-promotion:
                namespace_prefix: "Sylius\\Component\\Promotion"
                path: "@SyliusPromotionBundle/Resources/config/serializer"
            sylius-shipping:
                namespace_prefix: "Sylius\\Component\\Shipping"
                path: "@SyliusShippingBundle/Resources/config/serializer"
            sylius-taxation:
                namespace_prefix: "Sylius\\Component\\Taxation"
                path: "@SyliusTaxationBundle/Resources/config/serializer"
            sylius-taxonomy:
                namespace_prefix: "Sylius\\Component\\Taxonomy"
                path: "@SyliusTaxonomyBundle/Resources/config/serializer"
            sylius-variation:
                namespace_prefix: "Sylius\\Component\\Variation"
                path: "@SyliusVariationBundle/Resources/config/serializer"


# @SyliusCoreBundle/Resources/config/app/cmf.yml
cmf_core:
    publish_workflow: false

cmf_block:
    persistence:
        phpcr:
            block_basepath: /cms/blocks

cmf_content:
    persistence:
        phpcr:
            content_basepath: /cms/pages
    default_template: SyliusWebBundle:Frontend/StaticContent:show.html.twig

cmf_menu:
    persistence:
        phpcr:
            menu_basepath: /cms/menus

cmf_media:
    persistence:
        phpcr:
            media_basepath: /cms/medias
            
cmf_routing:
    chain:
        routers_by_id:
            router.default: 100
            sylius.dynamic_router: 50
            cmf_routing.dynamic_router: 20
    dynamic:
        generic_controller: cmf_content.controller:indexAction
        persistence:
            phpcr:
                enabled: true
                route_basepath: /cms/routes

cmf_create:
    security:
      role: ROLE_SYLIUS_ADMIN
    persistence:
        phpcr:
            image: false

liip_imagine:
    filter_sets:
        slideshow_default:
            data_loader: cmf_media_doctrine_phpcr
            format: jpg
            quality: 90
            filters:
                thumbnail: { size: [850, 300], mode: inset }
        slideshow_small:
            data_loader: cmf_media_doctrine_phpcr
            format: jpg
            quality: 90
            filters:
                thumbnail: { size: [260, 200], mode: inset }
        slideshow_medium:
            data_loader: cmf_media_doctrine_phpcr
            format: jpg
            quality: 90
            filters:
                thumbnail: { size: [850, 300], mode: inset }
        slideshow_large:
            data_loader: cmf_media_doctrine_phpcr
            format: jpg
            quality: 90
            filters:
                thumbnail: { size: [1170, 380], mode: inset }
        image_upload_thumbnail:
            quality: 85
            format: jpg
            data_loader: cmf_media_doctrine_phpcr
            filters:
                thumbnail: { size: [300, 150], mode: inset }

# @SyliusCoreBundle/Resources/config/app/payum.yml
payum:
    storages:
        Sylius\Component\Core\Model\Order: { doctrine: orm }
        Sylius\Component\Core\Model\Payment: { doctrine: orm }

    security:
        token_storage:
            Sylius\Bundle\PayumBundle\Model\PaymentSecurityToken: { doctrine: orm }

    contexts:
        paypal_express_checkout:
            paypal_express_checkout_nvp:
                username:  %paypal.express_checkout.username%
                password:  %paypal.express_checkout.password%
                signature: %paypal.express_checkout.signature%
                sandbox:   %paypal.express_checkout.sandbox%

        stripe:
            omnipay:
                type: Stripe
                options:
                    apiKey:   %stripe.secret_key%
                    testMode: %stripe.test_mode%

        be2bill:
            be2bill:
                identifier: %be2bill.identifier%
                password:   %be2bill.password%
                sandbox:    %be2bill.sandbox%

        be2bill_onsite:
            be2bill_onsite:
                identifier: %be2bill.identifier%
                password:   %be2bill.password%
                sandbox:    %be2bill.sandbox%

        stripe_checkout:
            stripe_checkout:
                publishable_key: %stripe.publishable_key%
                secret_key: %stripe.secret_key%

        dummy:
            custom:
                actions:
                    - sylius.payum.dummy.action.capture_payment
                    - sylius.payum.dummy.action.payment_status
